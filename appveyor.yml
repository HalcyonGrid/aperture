version: 1.0.{build}

image:
- Visual Studio 2017
- Ubuntu

platform:
- x64

skip_commits:
  files:
  - doc/*
  - README.md
  - .gitignore
  - LICENSE

cache:
- envs -> .appveyor.yml # Conan installation
- c:\conanData -> conanfile.txt
- /tmp/conanData -> conanfile.txt
- conanbuildinfo.cmake -> conanfile.txt
- conanbuildinfo.txt -> conanfile.txt
- conaninfo.txt -> conanfile.txt
- build -> CMakeLists.txt

install:
- echo "Downloading conan..."
- cmd: SET CONAN_USER_HOME=c:\conanData
- sh: export CONAN_USER_HOME=/tmp/conanData
- cmd: set PATH=%PATH%;%PYTHON%/Scripts/
- cmd: pip.exe install conan --upgrade
- sh: sudo -H pip install conan --upgrade
- conan user # Create the conan data directory
- conan --version
- conan remote add --force bincrafters https://api.bintray.com/conan/bincrafters/public-conan

before_build:
- ps: |
    if ($isLinux) {
      $env:EDITION = "linux"
    } else {
      $env:EDITION = "windows"
    }

build:
  parallel: true
  verbosity: minimal

for:
-
  matrix:
    only:
    - image: Visual Studio 2017
  build_script:
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - build.bat Release
-
  matrix:
    only:
    - image: Ubuntu
  build_script:
  - ./build.sh Release

after_build:
- ps: Rename-Item -Path bin -NewName aperture-$env:APPVEYOR_BUILD_VERSION-$env:APPVEYOR_REPO_BRANCH-$env:EDITION

# No tests for now.
test: off

artifacts:
- path: aperture-$(APPVEYOR_BUILD_VERSION)-$(APPVEYOR_REPO_BRANCH)-$(EDITION)
  name: Aperture-$(APPVEYOR_BUILD_VERSION)-$(APPVEYOR_REPO_BRANCH)-$(EDITION)
  type: zip

deploy:
  provider: GitHub
  auth_token:
    secure: DlRS0U90AATbPkzxigCLwaGe1vguHFeC3a0YhMZRA/OYEbLQ8+ybp2OGfqgwpbW4
  artifact: Aperture-$(APPVEYOR_BUILD_VERSION)-$(APPVEYOR_REPO_BRANCH)-$(EDITION)
  draft: true
  prerelease: false
  on:
    APPVEYOR_REPO_TAG: true
